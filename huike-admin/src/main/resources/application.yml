# 项目相关配置
huike:
  # 名称
  name: HuiKe
  # 版本
  version: 3.4.0
  # 版权年份
  copyrightYear: 2021
  # 实例演示开关
  demoEnabled: true
  # 文件路径 示例（ Windows配置D:/ruoyi/uploadPath，Linux配置 /home/ruoyi/uploadPath）
  #profile: /root/soft/uploadPath
  profile: D:\img
  # 获取ip地址开关
  addressEnabled: false
  # 验证码类型 math 数组计算 char 字符验证
  captchaType: math
  alioss:
    endpoint: oss-cn-guangzhou.aliyuncs.com
    access-key-id: LTAI4GKKRZkaZk3FxcP9fiuZ
    access-key-secret: rkPgyyNqCFmXraP0xJTf4hB19zSQwC
    bucket-name: itheima188

# 开发环境配置
server:
  # 服务器的HTTP端口，默认为8080
  port: 8080
  servlet:
    # 应用的访问路径
    context-path: /
  tomcat:
    # tomcat的URI编码
    uri-encoding: UTF-8
    # tomcat最大线程数，默认为200
    max-threads: 800
    # Tomcat启动初始化的线程数，默认值25
    min-spare-threads: 30
    threads:
      max: 800
      min-spare: 30

# 日志配置
logging:
  level:
    com.huike: debug
    org.springframework: warn

# Spring配置
spring:
  # 资源信息
  messages:
    # 国际化资源文件路径
    basename: i18n/messages
  profiles: 
    active: druid
  # 文件上传
  servlet:
     multipart:
       # 单个文件大小
       max-file-size:  10MB
       # 设置总上传的文件大小
       max-request-size:  20MB
#  main:
#    allow-bean-definition-overriding: true
#  activiti:
#    #1.false： 默认值。activiti在启动时，会对比数据库表中保存的版本，如果没有表或者版本不匹配，将抛出异常
#    #2.true： activiti会对数据库中所有表进行更新操作。如果表不存在，则自动创建
#    #3.create_drop： 在activiti启动时创建表，在关闭时删除表（必须手动关闭引擎，才能删除表）
#    #4.drop-create： 在activiti启动时删除原来的旧表，然后在创建新表（不需要手动关闭引擎）
#    database-schema-update: true
#    #检测历史表是否存在 activiti7默认没有开启数据库历史记录 启动数据库历史记录
#    db-history-used: true
#    #记录历史等级 可配置的历史级别有none, activity, audit, full
#    history-level: full
#    #校验流程文件，默认校验resources下的processes文件夹里的流程文件
#    check-process-definitions: false
  # redis 配置
  redis:
    # 地址
    host: 127.0.0.1
    #host: 172.17.2.65
    #host: 192.168.200.132
    # 端口，默认为6379
    port: 6379
    # 数据库索引
    database: 1
    # 密码
    #password: 02afbc26a84dd058
    # 连接超时时间
    timeout: 10s
    lettuce:
      pool:
        # 连接池中的最小空闲连接
        min-idle: 0
        # 连接池中的最大空闲连接
        max-idle: 8
        # 连接池的最大数据库连接数
        max-active: 80
        # #连接池最大阻塞等待时间（使用负值表示没有限制）
        max-wait: -1ms

# token配置
token:
    # 令牌自定义标识
    header: Authorization
    # 令牌密钥
    secret: abcdefghijklmnopqrstuvwxyz
    # 令牌有效期（默认30分钟）
    expireTime: 30

  
# MyBatis配置
mybatis:
    # 搜索指定包别名
    typeAliasesPackage: com.huike.**.domain
    # 配置mapper的扫描，找到所有的mapper.xml映射文件
    mapperLocations: classpath*:mapper/**/*Mapper.xml
    # 加载全局的配置文件
    configLocation: classpath:mybatis/mybatis-config.xml

# PageHelper分页插件
pagehelper: 
  helperDialect: mysql
  reasonable: true
  supportMethodsArguments: true
  params: count=countSql

## Miniio配置
#minio:
#  endpoint: 172.16.17.121
#  port: 9000
#  accessKey: minioadmin
#  secretKey: minioadmin
#  secure: false
#  bucketName: "huike-crm"
#  configDir: "/DATA/IMAGE/HETONG"

# 防止XSS攻击
xss: 
  # 过滤开关
  enabled: true
  # 排除链接（多个用逗号分隔）
  excludes: /system/notice/*
  # 匹配链接
  urlPatterns: /system/*,/monitor/*,/tool/*

#admin策略 导入和转换全部交由admin来处理，由admin来分配线索和规则
#rule策略 交由规则引擎来处理，项目一阶段不处理，单讲admin模式
rule:
  transfor: admin
  clue:
    import: admin
